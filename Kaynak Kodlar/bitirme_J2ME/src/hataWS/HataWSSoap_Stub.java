// This class was generated by 172 StubGenerator.
// Contents subject to change without notice.
// @generated

package hataWS;

import javax.xml.rpc.JAXRPCException;
import javax.xml.namespace.QName;
import javax.microedition.xml.rpc.Operation;
import javax.microedition.xml.rpc.Type;
import javax.microedition.xml.rpc.ComplexType;
import javax.microedition.xml.rpc.Element;

public class HataWSSoap_Stub implements hataWS.HataWSSoap, javax.xml.rpc.Stub {
	private String[] _propertyNames;
	private Object[] _propertyValues;

	public HataWSSoap_Stub() {
		_propertyNames = new String[] {ENDPOINT_ADDRESS_PROPERTY};
		_propertyValues = new Object[] {"http://160.75.96.32/1/webServices/hataWS.asmx"};
	}

	public void _setProperty(String name, Object value) {
		int size = _propertyNames.length;
		for (int i = 0; i < size; ++i) {
			if (_propertyNames[i].equals(name)) {
				_propertyValues[i] = value;
				return;
			}
		}
		// Need to expand our array for a new property
		String[] newPropNames = new String[size + 1];
		System.arraycopy(_propertyNames, 0, newPropNames, 0, size);
		_propertyNames = newPropNames;
		Object[] newPropValues = new Object[size + 1];
		System.arraycopy(_propertyValues, 0, newPropValues, 0, size);
		_propertyValues = newPropValues;

		_propertyNames[size] = name;
		_propertyValues[size] = value;
	}

	public Object _getProperty(String name) {
		for (int i = 0; i < _propertyNames.length; ++i) {
			if (_propertyNames[i].equals(name)) {
				return _propertyValues[i];
			}
		}
		if (ENDPOINT_ADDRESS_PROPERTY.equals(name) || USERNAME_PROPERTY.equals(name) || PASSWORD_PROPERTY.equals(name)) {
			return null;
		}
		if (SESSION_MAINTAIN_PROPERTY.equals(name)) {
			return new java.lang.Boolean(false);
		}
		throw new JAXRPCException("Stub does not recognize property: "+name);
	}

	protected void _prepOperation(Operation op) {
		for (int i = 0; i < _propertyNames.length; ++i) {
			op.setProperty(_propertyNames[i], _propertyValues[i].toString());
		}
	}

	// 
	//  Begin user methods
	// 

	public hataWS.ArrayOfHataBilgi getir(java.lang.String projeIsmi) throws java.rmi.RemoteException {
		// Copy the incoming values into an Object array if needed.
		Object[] inputObject = new Object[1];
		inputObject[0] = projeIsmi;

		Operation op = Operation.newInstance(_qname_getir, _type_getir, _type_getirResponse);
		_prepOperation(op);
		op.setProperty(Operation.SOAPACTION_URI_PROPERTY, "http://localhost/hataWS/getir");
		Object resultObj;
		try {
			resultObj = op.invoke(inputObject);
		} catch (JAXRPCException e) {
			Throwable cause = e.getLinkedCause();
			if (cause instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) cause;
			}
			throw e;
		}
		hataWS.ArrayOfHataBilgi result;
		// Convert the result into the right Java type.
		// Unwrapped return value
		Object[] getirResultObj = (Object[]) ((Object[])resultObj)[0];
		if (getirResultObj == null) {
			result = null;
		} else {
			result = new hataWS.ArrayOfHataBilgi();
			hataWS.HataBilgi[] hataBilgiArray;
			Object[] hataBilgiObj = (Object[]) getirResultObj[0];
			if (hataBilgiObj == null) {
				hataBilgiArray = null;
			} else {
				int hataBilgiArraySize = hataBilgiObj.length;
				hataBilgiArray = new hataWS.HataBilgi[hataBilgiArraySize];
				for (int hataBilgiArrayIndex = 0; 
					hataBilgiArrayIndex < hataBilgiArraySize; 
					++hataBilgiArrayIndex) {
					if (hataBilgiObj[hataBilgiArrayIndex] == null) {
						hataBilgiArray[hataBilgiArrayIndex] = null;
					} else {
						hataBilgiArray[hataBilgiArrayIndex] = new hataWS.HataBilgi();
						java.lang.String string;
						Object projeIsmiObj = ((Object[])hataBilgiObj[hataBilgiArrayIndex])[0];
						string = (java.lang.String)projeIsmiObj;
						hataBilgiArray[hataBilgiArrayIndex].setProjeIsmi(string);
						java.lang.String string2;
						Object aciklamaObj = ((Object[])hataBilgiObj[hataBilgiArrayIndex])[1];
						string2 = (java.lang.String)aciklamaObj;
						hataBilgiArray[hataBilgiArrayIndex].setAciklama(string2);
						java.lang.String string3;
						Object zamanObj = ((Object[])hataBilgiObj[hataBilgiArrayIndex])[2];
						string3 = (java.lang.String)zamanObj;
						hataBilgiArray[hataBilgiArrayIndex].setZaman(string3);
					}
				}
			}
			result.setHataBilgi(hataBilgiArray);
		}
		return result;
	}

	public hataWS.SoruBilgi ilkSoru(java.lang.String projeIsmi) throws java.rmi.RemoteException {
		// Copy the incoming values into an Object array if needed.
		Object[] inputObject = new Object[1];
		inputObject[0] = projeIsmi;

		Operation op = Operation.newInstance(_qname_ilkSoru, _type_ilkSoru, _type_ilkSoruResponse);
		_prepOperation(op);
		op.setProperty(Operation.SOAPACTION_URI_PROPERTY, "http://localhost/hataWS/ilkSoru");
		Object resultObj;
		try {
			resultObj = op.invoke(inputObject);
		} catch (JAXRPCException e) {
			Throwable cause = e.getLinkedCause();
			if (cause instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) cause;
			}
			throw e;
		}
		hataWS.SoruBilgi result;
		// Convert the result into the right Java type.
		// Unwrapped return value
		Object[] ilkSoruResultObj = (Object[]) ((Object[])resultObj)[0];
		if (ilkSoruResultObj == null) {
			result = null;
		} else {
			result = new hataWS.SoruBilgi();
			long a_long;
			Object idObj = ilkSoruResultObj[0];
			a_long = ((java.lang.Long)idObj).longValue();
			result.setId(a_long);
			java.lang.String string;
			Object soruObj = ilkSoruResultObj[1];
			string = (java.lang.String)soruObj;
			result.setSoru(string);
			java.lang.String string2;
			Object kNotObj = ilkSoruResultObj[2];
			string2 = (java.lang.String)kNotObj;
			result.setKNot(string2);
			long a_long2;
			Object evetIdObj = ilkSoruResultObj[3];
			a_long2 = ((java.lang.Long)evetIdObj).longValue();
			result.setEvetId(a_long2);
			long a_long3;
			Object hayirIdObj = ilkSoruResultObj[4];
			a_long3 = ((java.lang.Long)hayirIdObj).longValue();
			result.setHayirId(a_long3);
		}
		return result;
	}

	public hataWS.SoruBilgi sonraki(long id) throws java.rmi.RemoteException {
		// Copy the incoming values into an Object array if needed.
		Object[] inputObject = new Object[1];
		inputObject[0] = new java.lang.Long(id);

		Operation op = Operation.newInstance(_qname_sonraki, _type_sonraki, _type_sonrakiResponse);
		_prepOperation(op);
		op.setProperty(Operation.SOAPACTION_URI_PROPERTY, "http://localhost/hataWS/sonraki");
		Object resultObj;
		try {
			resultObj = op.invoke(inputObject);
		} catch (JAXRPCException e) {
			Throwable cause = e.getLinkedCause();
			if (cause instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) cause;
			}
			throw e;
		}
		hataWS.SoruBilgi result;
		// Convert the result into the right Java type.
		// Unwrapped return value
		Object[] sonrakiResultObj = (Object[]) ((Object[])resultObj)[0];
		if (sonrakiResultObj == null) {
			result = null;
		} else {
			result = new hataWS.SoruBilgi();
			long a_long;
			Object idObj = sonrakiResultObj[0];
			a_long = ((java.lang.Long)idObj).longValue();
			result.setId(a_long);
			java.lang.String string;
			Object soruObj = sonrakiResultObj[1];
			string = (java.lang.String)soruObj;
			result.setSoru(string);
			java.lang.String string2;
			Object kNotObj = sonrakiResultObj[2];
			string2 = (java.lang.String)kNotObj;
			result.setKNot(string2);
			long a_long2;
			Object evetIdObj = sonrakiResultObj[3];
			a_long2 = ((java.lang.Long)evetIdObj).longValue();
			result.setEvetId(a_long2);
			long a_long3;
			Object hayirIdObj = sonrakiResultObj[4];
			a_long3 = ((java.lang.Long)hayirIdObj).longValue();
			result.setHayirId(a_long3);
		}
		return result;
	}

	public java.lang.String gonder(java.lang.String projeIsmi, long sonSoruId, int cevap, java.lang.String hataAciklama, long yollayanId) throws java.rmi.RemoteException {
		// Copy the incoming values into an Object array if needed.
		Object[] inputObject = new Object[5];
		inputObject[0] = projeIsmi;
		inputObject[1] = new java.lang.Long(sonSoruId);
		inputObject[2] = new java.lang.Integer(cevap);
		inputObject[3] = hataAciklama;
		inputObject[4] = new java.lang.Long(yollayanId);

		Operation op = Operation.newInstance(_qname_gonder, _type_gonder, _type_gonderResponse);
		_prepOperation(op);
		op.setProperty(Operation.SOAPACTION_URI_PROPERTY, "http://localhost/hataWS/gonder");
		Object resultObj;
		try {
			resultObj = op.invoke(inputObject);
		} catch (JAXRPCException e) {
			Throwable cause = e.getLinkedCause();
			if (cause instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) cause;
			}
			throw e;
		}
		java.lang.String result;
		// Convert the result into the right Java type.
		// Unwrapped return value
		Object gonderResultObj = ((Object[])resultObj)[0];
		result = (java.lang.String)gonderResultObj;
		return result;
	}
	// 
	//  End user methods
	// 

	protected static final QName _qname_aciklama = new QName("http://localhost/hataWS/", "aciklama");
	protected static final QName _qname_cevap = new QName("http://localhost/hataWS/", "cevap");
	protected static final QName _qname_evetId = new QName("http://localhost/hataWS/", "evetId");
	protected static final QName _qname_getir = new QName("http://localhost/hataWS/", "getir");
	protected static final QName _qname_getirResponse = new QName("http://localhost/hataWS/", "getirResponse");
	protected static final QName _qname_getirResult = new QName("http://localhost/hataWS/", "getirResult");
	protected static final QName _qname_gonder = new QName("http://localhost/hataWS/", "gonder");
	protected static final QName _qname_gonderResponse = new QName("http://localhost/hataWS/", "gonderResponse");
	protected static final QName _qname_gonderResult = new QName("http://localhost/hataWS/", "gonderResult");
	protected static final QName _qname_hataAciklama = new QName("http://localhost/hataWS/", "hataAciklama");
	protected static final QName _qname_hataBilgi = new QName("http://localhost/hataWS/", "hataBilgi");
	protected static final QName _qname_hayirId = new QName("http://localhost/hataWS/", "hayirId");
	protected static final QName _qname_id = new QName("http://localhost/hataWS/", "id");
	protected static final QName _qname_ilkSoru = new QName("http://localhost/hataWS/", "ilkSoru");
	protected static final QName _qname_ilkSoruResponse = new QName("http://localhost/hataWS/", "ilkSoruResponse");
	protected static final QName _qname_ilkSoruResult = new QName("http://localhost/hataWS/", "ilkSoruResult");
	protected static final QName _qname_kNot = new QName("http://localhost/hataWS/", "kNot");
	protected static final QName _qname_projeIsmi = new QName("http://localhost/hataWS/", "projeIsmi");
	protected static final QName _qname_sonSoruId = new QName("http://localhost/hataWS/", "sonSoruId");
	protected static final QName _qname_sonraki = new QName("http://localhost/hataWS/", "sonraki");
	protected static final QName _qname_sonrakiResponse = new QName("http://localhost/hataWS/", "sonrakiResponse");
	protected static final QName _qname_sonrakiResult = new QName("http://localhost/hataWS/", "sonrakiResult");
	protected static final QName _qname_soru = new QName("http://localhost/hataWS/", "soru");
	protected static final QName _qname_yollayanId = new QName("http://localhost/hataWS/", "yollayanId");
	protected static final QName _qname_zaman = new QName("http://localhost/hataWS/", "zaman");
	protected static final Element _type_getir;
	protected static final Element _type_getirResponse;
	protected static final Element _type_ilkSoru;
	protected static final Element _type_ilkSoruResponse;
	protected static final Element _type_sonraki;
	protected static final Element _type_sonrakiResponse;
	protected static final Element _type_gonder;
	protected static final Element _type_gonderResponse;
	static {
		// Create all of the Type's that this stub uses, once.
		Element _type_projeIsmi;
		_type_projeIsmi = new Element(_qname_projeIsmi, Type.STRING, 0, 1, false);
		ComplexType _complexType_getir;
		_complexType_getir = new ComplexType();
		_complexType_getir.elements = new Element[1];
		_complexType_getir.elements[0] = _type_projeIsmi;
		_type_getir = new Element(_qname_getir, _complexType_getir);
		Element _type_aciklama;
		_type_aciklama = new Element(_qname_aciklama, Type.STRING, 0, 1, false);
		Element _type_zaman;
		_type_zaman = new Element(_qname_zaman, Type.STRING, 0, 1, false);
		ComplexType _complexType_hataBilgi;
		_complexType_hataBilgi = new ComplexType();
		_complexType_hataBilgi.elements = new Element[3];
		_complexType_hataBilgi.elements[0] = _type_projeIsmi;
		_complexType_hataBilgi.elements[1] = _type_aciklama;
		_complexType_hataBilgi.elements[2] = _type_zaman;
		Element _type_hataBilgi;
		_type_hataBilgi = new Element(_qname_hataBilgi, _complexType_hataBilgi, 0, -1, true);
		ComplexType _complexType_arrayOfHataBilgi;
		_complexType_arrayOfHataBilgi = new ComplexType();
		_complexType_arrayOfHataBilgi.elements = new Element[1];
		_complexType_arrayOfHataBilgi.elements[0] = _type_hataBilgi;
		Element _type_getirResult;
		_type_getirResult = new Element(_qname_getirResult, _complexType_arrayOfHataBilgi, 0, 1, false);
		ComplexType _complexType_getirResponse;
		_complexType_getirResponse = new ComplexType();
		_complexType_getirResponse.elements = new Element[1];
		_complexType_getirResponse.elements[0] = _type_getirResult;
		_type_getirResponse = new Element(_qname_getirResponse, _complexType_getirResponse);
		_type_ilkSoru = new Element(_qname_ilkSoru, _complexType_getir);
		Element _type_id;
		_type_id = new Element(_qname_id, Type.LONG);
		Element _type_soru;
		_type_soru = new Element(_qname_soru, Type.STRING, 0, 1, false);
		Element _type_kNot;
		_type_kNot = new Element(_qname_kNot, Type.STRING, 0, 1, false);
		Element _type_evetId;
		_type_evetId = new Element(_qname_evetId, Type.LONG);
		Element _type_hayirId;
		_type_hayirId = new Element(_qname_hayirId, Type.LONG);
		ComplexType _complexType_soruBilgi;
		_complexType_soruBilgi = new ComplexType();
		_complexType_soruBilgi.elements = new Element[5];
		_complexType_soruBilgi.elements[0] = _type_id;
		_complexType_soruBilgi.elements[1] = _type_soru;
		_complexType_soruBilgi.elements[2] = _type_kNot;
		_complexType_soruBilgi.elements[3] = _type_evetId;
		_complexType_soruBilgi.elements[4] = _type_hayirId;
		Element _type_ilkSoruResult;
		_type_ilkSoruResult = new Element(_qname_ilkSoruResult, _complexType_soruBilgi, 0, 1, false);
		ComplexType _complexType_ilkSoruResponse;
		_complexType_ilkSoruResponse = new ComplexType();
		_complexType_ilkSoruResponse.elements = new Element[1];
		_complexType_ilkSoruResponse.elements[0] = _type_ilkSoruResult;
		_type_ilkSoruResponse = new Element(_qname_ilkSoruResponse, _complexType_ilkSoruResponse);
		ComplexType _complexType_sonraki;
		_complexType_sonraki = new ComplexType();
		_complexType_sonraki.elements = new Element[1];
		_complexType_sonraki.elements[0] = _type_id;
		_type_sonraki = new Element(_qname_sonraki, _complexType_sonraki);
		Element _type_sonrakiResult;
		_type_sonrakiResult = new Element(_qname_sonrakiResult, _complexType_soruBilgi, 0, 1, false);
		ComplexType _complexType_sonrakiResponse;
		_complexType_sonrakiResponse = new ComplexType();
		_complexType_sonrakiResponse.elements = new Element[1];
		_complexType_sonrakiResponse.elements[0] = _type_sonrakiResult;
		_type_sonrakiResponse = new Element(_qname_sonrakiResponse, _complexType_sonrakiResponse);
		Element _type_sonSoruId;
		_type_sonSoruId = new Element(_qname_sonSoruId, Type.LONG);
		Element _type_cevap;
		_type_cevap = new Element(_qname_cevap, Type.INT);
		Element _type_hataAciklama;
		_type_hataAciklama = new Element(_qname_hataAciklama, Type.STRING, 0, 1, false);
		Element _type_yollayanId;
		_type_yollayanId = new Element(_qname_yollayanId, Type.LONG);
		ComplexType _complexType_gonder;
		_complexType_gonder = new ComplexType();
		_complexType_gonder.elements = new Element[5];
		_complexType_gonder.elements[0] = _type_projeIsmi;
		_complexType_gonder.elements[1] = _type_sonSoruId;
		_complexType_gonder.elements[2] = _type_cevap;
		_complexType_gonder.elements[3] = _type_hataAciklama;
		_complexType_gonder.elements[4] = _type_yollayanId;
		_type_gonder = new Element(_qname_gonder, _complexType_gonder);
		Element _type_gonderResult;
		_type_gonderResult = new Element(_qname_gonderResult, Type.STRING, 0, 1, false);
		ComplexType _complexType_gonderResponse;
		_complexType_gonderResponse = new ComplexType();
		_complexType_gonderResponse.elements = new Element[1];
		_complexType_gonderResponse.elements[0] = _type_gonderResult;
		_type_gonderResponse = new Element(_qname_gonderResponse, _complexType_gonderResponse);
	}

}
